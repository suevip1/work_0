<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dtstack.engine.dao.ClusterDao">

    <sql id="select_content_fragment">
      id,cluster_name,gmt_create,gmt_modified,is_deleted,hadoop_version
    </sql>

    <sql id="select_where_fragment">
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            <if test="model.id != null and model.id > 0">
                AND id = #{model.id}
            </if>
            <if test="model.clusterName != null">
                AND cluster_name like '%${model.clusterName}%'
            </if>
            <if test="model.isDeleted != null">
                AND is_deleted = #{model.isDeleted}
            </if>
            <if test="model.hadoopVersion != null">
                AND hadoop_version = #{model.hadoopVersion}
            </if>
        </trim>
    </sql>


    <sql id="page_select_where_fragment">
        ON cc.id = cct.cluster_id
        <!--存在绑定关系或者没有绑定，需要刨除掉解绑的关系-->
        AND (cct.is_deleted = 0 OR cct.is_deleted IS NULL)
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            AND cc.is_deleted = 0
            <if test="model.fuzzyClusterName != null">
                AND cc.cluster_name like '%${model.fuzzyClusterName}%'
            </if>
            <if test="model.tenantIds != null and model.tenantIds.size() > 0">
                AND cct.dt_uic_tenant_id IN
                <foreach item="id" index="index" collection="model.tenantIds" open="(" separator="," close=")">
                    #{id}
                </foreach>
            </if>
        </trim>
    </sql>

    <select id="getPageQueryCount" resultType="java.lang.Integer">
        SELECT COUNT(distinct cc.id)
        FROM console_cluster cc
        LEFT JOIN console_cluster_tenant cct
        <include refid="page_select_where_fragment"/>
        limit 1
    </select>


    <select id="pageQuery" resultType="com.dtstack.engine.api.dto.ClusterPageDTO">
        SELECT
        cc.id as clusterId,
        cc.cluster_name,
        cc.gmt_modified,
        GROUP_CONCAT(cct.dt_uic_tenant_id) as tenantIds

        FROM console_cluster cc
        LEFT JOIN console_cluster_tenant cct

        <include refid="page_select_where_fragment"/>

        GROUP by cc.id
        ORDER BY cc.gmt_modified DESC

        <if test="start != null and pageSize != null">
            limit #{start} , #{pageSize}
        </if>

        <if test="start == null and pageSize != null">
            limit #{pageSize}
        </if>

        <if test="start == null and pageSize == null">
            limit 1000
        </if>

    </select>




    <select id="generalQuery" resultType="com.dtstack.engine.api.vo.ClusterVO">
        SELECT
        <include refid="select_content_fragment"/>
        FROM console_cluster
        <include refid="select_where_fragment"/>
        <if test="orderBy != null and sort != null">
            order by ${orderBy} ${sort}
        </if>
        <if test="orderBy != null and sort == null">
            order by ${orderBy} desc
        </if>
        <if test="start != null and pageSize != null">
            limit #{start} , #{pageSize}
        </if>
        <if test="start == null and pageSize != null">
            limit #{pageSize}
        </if>
        <if test="start == null and pageSize == null">
            limit 1000
        </if>
    </select>

    <select id="getByClusterName" resultType="Cluster">
        SELECT
        <include refid="select_content_fragment"/>
        FROM console_cluster
        WHERE cluster_name = #{clusterName} AND is_deleted = 0 LIMIT 1
    </select>

    <select id="getOne" resultType="Cluster">
        SELECT
        <include refid="select_content_fragment"/>
        FROM console_cluster
        WHERE id = #{id} AND is_deleted = 0
    </select>


    <insert id="insert" parameterType="Cluster" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO console_cluster(id,cluster_name,hadoop_version)
        VALUES (#{id},#{clusterName},#{hadoopVersion})
    </insert>

    <insert id="insertWithId" parameterType="Cluster">
        INSERT INTO console_cluster(id,cluster_name,hadoop_version)
        VALUES (#{id},#{clusterName},#{hadoopVersion})
        on duplicate key update cluster_name=values(cluster_name)
    </insert>

    <select id="listAll" resultType="Cluster">
        SELECT
        <include refid="select_content_fragment"/>
        FROM console_cluster
        WHERE is_deleted = 0
    </select>

    <select id="countAll" resultType="java.lang.Integer">
        SELECT
         count(*)
        FROM console_cluster
        WHERE is_deleted = 0
    </select>

    <update id="updateHadoopVersion">
        UPDATE console_cluster
        set hadoop_version = #{hadoopVersion}
        where id = #{id} and is_deleted = 0
    </update>

    <update id="deleteCluster">
        DELETE from console_cluster
        where id = #{id}
    </update>

    <update id="logicRemoveCluster">
        UPDATE console_cluster set is_deleted = 1, gmt_modified  = CURRENT_TIMESTAMP
        where id = #{id}
    </update>

    <update id="updateGmtModified">
        UPDATE console_cluster
        set gmt_modified  = CURRENT_TIMESTAMP
        where id = #{id}
    </update>
</mapper>
