<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dtstack.engine.dao.ScheduleJobHistoryDao">

    <sql id="Base_Column_List">
        `id`, `app_type`, `job_id`, `exec_start_time`, `exec_end_time`,
        `engine_job_id`, `application_id`, `gmt_create`, `gmt_modified`, `is_deleted`,`version_name`
    </sql>

    <select id="selectByJobId" parameterType="com.dtstack.engine.api.pager.PageQuery" resultType="com.dtstack.engine.po.ScheduleJobHistory">
        select
        <include refid="Base_Column_List" />
        from schedule_job_history
        where job_id = #{model.jobId} order by id desc
        <if test="start != null and pageSize != null">
            limit #{start} , #{pageSize}
        </if>
    </select>

    <select id="selectJobIdByCount" parameterType="com.dtstack.engine.api.pager.PageQuery" resultType="java.lang.Integer">
        select count(1)
        from schedule_job_history
        where job_id = #{model.jobId}
    </select>


    <insert id="insert" parameterType="com.dtstack.engine.po.ScheduleJobHistory" useGeneratedKeys="true" keyProperty="id">
        insert into schedule_job_history (`app_type`, `job_id`,
        `exec_start_time`, `exec_end_time`,
         `engine_job_id`, `application_id`,`version_name`
        )
        values (#{appType,jdbcType=INTEGER}, #{jobId,jdbcType=VARCHAR},
        #{execStartTime,jdbcType=TIMESTAMP}, #{execEndTime,jdbcType=TIMESTAMP},
        #{engineJobId,jdbcType=VARCHAR}, #{applicationId,jdbcType=VARCHAR},#{versionName,jdbcType=VARCHAR}
        )
    </insert>


    <update id="updateByApplicationId">
        update schedule_job_history
        set exec_end_time = now()
        where application_id = #{applicationId} and app_type = #{appType}
    </update>

    <select id="listByJobId" resultType="com.dtstack.engine.po.ScheduleJobHistory">
        select
        <include refid="Base_Column_List" />
        from schedule_job_history
        where job_id = #{jobId} and is_deleted = 0 order by id desc
        <if test="limit != null">
            limit #{limit}
        </if>
    </select>

    <update id="deleteByJobIds">
        update schedule_job_history
        set is_deleted = 1
        where app_type = #{appType}  and job_id in
        <foreach collection="jobIds" item="jobId" open="(" close=")" separator=",">
            #{jobId}
        </foreach>
    </update>


    <delete id="deleteByIds">
        delete FROM schedule_job_history
        where id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>


    <select id="listJobHistoriesByStartId" resultType="com.dtstack.engine.po.ScheduleJobHistory">
        select
        <include refid="Base_Column_List" />
        from schedule_job_history
        where id > #{startId} and is_deleted = 0 and exec_end_time &lt;= #{time}
        <if test="limit != null">
            limit #{limit}
        </if>
    </select>

    <select id="getJobIdsByAppType" resultType="java.lang.String">
        select
        job_id
        from schedule_job_history
        where app_type = #{appType} and is_deleted = 0
    </select>

</mapper>
